# https://github.com/actions/github-script

name: GitHub Script Action demo 

on: 
  workflow_dispatch:
  issues:
    types:
      - reopened
      - opened

jobs:

  view-context-attributes-via-script: 
    runs-on: ubuntu-latest
    steps:
      - name: View context attributes
        uses: actions/github-script@v7.0.1
        with:
          script: console.log(context)

  reading-step-results: 
    runs-on: ubuntu-latest 
    steps: 
      - name: Write a string in script
        id: write-a-string-in-script
        uses: actions/github-script@v7.0.1
        with:
          script: | 
            return "Hello, GitHub Actions!"; 
          result-encoding: string 
      - name: Get result 
        run: echo "${{ steps.write-a-string-in-script.outputs.result }}"
        
  script-with-retry: 
    runs-on: ubuntu-latest
    steps: 
      - name: get issues 
        uses: actions/github-script@v7.0.1
        with:
          retries: 3
          retry-exempt-status-codes: 400,401
          
          # The following arguments will be provided
          # 
          # `github`     : A pre-authenticated octokit/rest.js client with pagination plugins
          # `context`    : An object containing the context of the workflow run
          # `core`       : A reference to the @actions/core package
          # `glob`       : A reference to the @actions/glob package
          # `io`         : A reference to the @actions/io package
          # `exec`       : A reference to the @actions/exec package
          # `require`    : A proxy wrapper around the normal Node.js require 

          script: |
            github.rest.issues.get({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            
  comment-via-script:
    permissions:
      issues: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting! (This comment is messaged by GitHub Script action)'
            })

  use-npm-package:
    runs-on: ubuntu-latest 
    steps: 
       - uses: actions/checkout@v4.1.7
       - uses: actions/setup-node@v4.0.2
         with: 
           node-version: '20.x'
       - run: npm ci 
       - run: npm install execa 
       - uses: actions/github-script@v7.0.1
         with: 
           script: |
             import { execa } from 'execa';
             const { stdout } = await execa('echo', ['hello', 'world']);

             console.log(stdout);
             
  use-env-as-input:
    runs-on: ubuntu-latest 
    steps: 
      - uses: actions/checkout@v4.1.7
        env: 
          FIRST_WORD: Hello
          SECOND_WORD: GitHub Actions!
        with: 
          script: | 
            const { FIRST_WORD, SECOND_WORD } = process.env;  
            console.log(FIRST_WORD, SECOND_WORD); 
